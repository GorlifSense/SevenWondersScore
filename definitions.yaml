CreateEncPaymentInstrRequest:
  type: object
  properties:
    messageId:
      type: string
      example: de0815ac-a6a0-11eb-bcbc-0242ac130002
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}- [0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      description: Unique message identifier (GUID format) of this command.
    paymentInstrument:
      example: PLEASE NOTE, this field should be passed as JWE encrypted string - eyJ...xQ
      $ref: 'definitions.yaml#/PaymentInstrument'
  required:
    - messageId
    - paymentInstrument   

CreateEncPaymentInstrResponse:
  type: object
  properties:
    messageId:
      type: string
      example: de0815ac-a6a0-11eb-bcbc-0242ac130002
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}- [0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      description: Unique message identifier (GUID format) of this command.
    statusCode:
      type: string
      pattern: ^\\d{4}$
      example: '0000'
      description: Four-digit status code. For possible status codes, see StatusCode section
    statusMessage:
      type: string
      example: 'SUCCESS'
      description: Human readable comments about the status. See StatusCode section for the correspoding messages
    encPaymentInstrument:
      example: PLEASE NOTE, this field will be present as jwt string - eyJ...xQ
      $ref: 'definitions.yaml#/PaymentInstrument'
  required:
    - messageId
    - statusCode 
    - statusMessage
    - encPaymentInstrument

CheckCardEligibilityRequest:
  type: object
  properties:
    conversationIdentifier:
      type: string
      example: 'string'
    billingAddress:
      type: string
      example: Encrypted. Refer to object for details.TSP-APPLE - Not Available; TSP-HCE - Optional; TSP-ECOM - Not Available.
      description: 'string'
    deviceLanguage:
      type: string
      example: 'string'
      description: Device language as defined by ISO. Apple - 3 chars ISO639- 3, Samsung - 2 chars ISO639-1.TSP-APPLE - Mandatory; TSP- HCE - Optional; TSP-ECOM - Not Available.
    deviceLocale:
      type: string
      example: 'string' 
      description: Locale device setting as defined in BCP47.TSP-APPLE - Not Available; TSP-HCE - Optional; TSP-ECOM - Not Available.
    deviceType:
      type: string
      example: 'string'
      description: Enum value, if not provided by OEMs, value 'UNKNOWN' is passed to the issuer.
      enum: [OEM_PHONE, OEM_TABLET, OEM_LAPTOP, OEM_WATCH, ANDROID_PHONE, ANDROID_TABLET, ANDROID_WATCH, SAMSUNG_PHONE, SAMSUNG_GEAR, SAMSUNG_TV, SAMSUNG_TABLET, UNKNOWN, TR_PHONE, TR_TABLET, TR_PHONE_TABLET, TR_PC, TR_WATCH, TR_TV, TR_WEARABLE_DEVICE, TR_AUTOMOBILE_DEVICE, TR_OTHER, 00, 01, 02, 03, 04, 05, 06, 07, 08, 09]
    deviceData:
      type: string
      example: 'string'
      description: Additional device data. Encrypted sensitive data, see "DeviceData" object for the unencrypted content. TSP- APPLE - Not Available; TSP-HCE - Optional; TSP-ECOM - Optional.
    presentationMode:
      type: string
      example: 'string'
      description: Enum value indicating in which way the PAN was presented. NFC near field, MST mag-stripe, ECM e- commerce, APP in-app, ALL all.TSP-APPLE - Optional; TSP- HCE - Optional; TSP-ECOM - Optional.
      enum: [NFC, MST, ECM, APP, ALL]
    rpanData:
      type: string
      example: 'string'
      description: Encrypted sensitive data, see "RpanData" object for the unencrypted content.
    rpanSource:  
      type: string
      example: 'string'
      description: Enum value indicating in which way the PAN was entered.TSP-APPLE - Mandatory; TSP-HCE - Optional; TSP- ECOM - Not Available.
      enum: [ON_FILE, MOBILE_BANKING_APP, ENTERED_BY_USER, OCR, ON_NFC, PROVISIONING_TOKEN, UNKNOWN]
    seid:  
      type: string
      example: 'string'
      description: Secure element ID.TSP-APPLE - Mandatory; TSP-HCE - Not Available; TSP-ECOM - Not Available.
    tokenReferenceId:  
      type: string
      example: 'string'
      description: 
    tokenRequestorId:
      type: string
      example: 'string'
      description: GUID for the token.
    tokenType:
      type: string
      example: '01'
      description: The type of the token. Format It is one of the following values - 01 Card On File - 02 Secure Element - 03 Cloud - 04 QR Code - 05 Ecom Enabler
      pattern: '^[0]{1}[1-5]{1}$'
    walletId:
      type: string
      example: 'string'
      description: Unique ID assigned to a wallet installation for a given user and device.TSP-APPLE - Not Available; TSP-HCE - Optional; TSP-ECOM - Not Available.
  required:
    - conversationIdentifier
    - deviceType
    - tokenReferenceId
    - tokenRequestorId    

ErrorResponse:
  type: object
  properties:
    messageId:
      type: string
      example: de0815ac-a6a0-11eb-bcbc-0242ac130002
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}- [0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      description: Unique message identifier (GUID format) of this command.
    statusCode:
      type: string
      pattern: ^\\d{4}$
      example: '1996'
      description: Four-digit status code. For possible status codes, see StatusCode section
    statusMessage:
      type: string
      example: 'BAD_REQUEST'
      description: Human readable comments about the status. See StatusCode section for the correspoding messages
  required:
    - messageId
    - statusCode
    - statusMessage

CheckCardEligibilityResponse:
  type: object
  properties:
    conversationIdentifier:
      type: string
      example: 'string'
    alternativeAppIdentifier:  
      type: string
      example: 'string'
      description: Optional, used in case the issuer needs to override the default value configured in the TSP.TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Not Available.
    cardMetaDataIdentifier:
      type: string
      example: 'string'
      description: Optional, used in case the issuer needs to override the default value configured in the TSP.
    cardMetadata:
      $ref: 'definitions.yaml#/CardMetadata'
    encData:
      type: string
      example: 'string'
      description: Encrypted sensitive data, see "EncData" object for the unencrypted content. There the structure is defined , as well as the conditions for this field. TSP-APPLE -Conditional; TSP-HCE -Conditional; TSP-ECOM - Not Available.
    mobileAppIdentifier:
      type: string
      example: 'string'
      description: Optional, used in case the issuer needs to override the default value configured in the TSP.
    responseLife:
      type: string
      example: 'string'
      description: Time in minutes within which the provisioning must be completed (Minimum value 60 minutes, maximum value 43200 minutes(=30 days)).TSP-APPLE - Optional; TSP-HCE - Not Available; TSP-ECOM - Not Available.
    termsAndConditionsIdentifier:
      type: string
      example: 'string'
      description: Id for the terms&condition to be provided to the consumer, optional, used in case the issuer needs to override the TSP default. Note the Id must be linked to the PAN range.
    tokenLabel:
      type: string
      example: 'string'
      description: Free to use for the issuer, the value provided will be returned during token status inquiry and during de- tokenize.
    tokenReferenceId:
      type: string
      example: 'string'
      description: GUID for the token
  required:
    - conversationIdentifier 

CardMetadata:
  type: object
  properties:
    backgroundColor:
      type: string
      example: 'string'
      description: CSS style RGB triplet - RGB(255,255,255). TSP-HCE - Optional; TSP-ECOM - Optional.
    cardArt:
      $ref: 'definitions.yaml#/CardArt'
    cardName:
      type: string
      example: 'string'
      description: The name of the card. TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    customerServiceEmail:
      type: string
      example: 'string'
      description: Customer service email address of the issuing bank. TSP- APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    customerServiceName:
      type: string
      example: 'string'
      description: Name of customer service of the issuing bank. TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    customerServiceTelephone:
      type: string
      example: 'string'
      description: Customer service phone number of the issuing bank. TSP- HCE - Optional; TSP-ECOM - Optional.
    customerServiceWebsite:
      type: string
      example: 'string'
      description: Customer service website of the issuing bank. TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    foregroundColor:
      type: string
      example: 'string'
      description: CSS style RGB triplet - RGB(255,255,255).TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    issuerAddress: 
      type: string
      example: 'string'
      description: Physical address of the Issuer offices (main office). E.g. 1234 FirstStreet, PostCode, City, Country. TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    issuerCardLogoGUID:
      type: string
      example: 'string'
      description: GUID for issuer card logo, must have been configured in the TSP.TSP-APPLE - Not Available; TSP-HCE - Optional; TSP- ECOM - Optional.
    issuerCardSymbolGUID:  
      type: string
      example: 'string'
      description: GUID for issuer card symbol logo, must have been configured in the TSP. TSP-APPLE - Not Available; TSP-HCE - Optional; TSP-ECOM - Optional.
    issuerName:
      type: string
      example: 'string'
      description: Name of issuing bank, may contain spaces.TSP-APPLE - Not Available; TSP-HCE - Optional; TSP-ECOM - Optional.
    labelColor:
      type: string
      example: 'string'
      description: Color of the card label specified as a CSS style RGB triplet - - RGB(255,255,255).TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    longDescription:
      type: string
      example: 'string'
      description: Detailed description of the card product. E.g. 'The Bank Travelers Card'.TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    privacyPolicyUrl:
      type: string
      example: 'string'
      description: URL of issuer website describing the privacy policy. TSP- APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    shortDescription:
      type: string
      example: 'string'
      description: Short description of the card product, used for locked screen notifications. Used if the long description is not provided. TSP-APPLE - Optional; TSP-HCE - Optional; TSP- ECOM - Optional.
    supportsRpanNotifications:
      type: string
      example: 'string'
      description: Boolean indicating whether notifications for all tokens linked to a real PAN are used.TSP-APPLE - Optional; TSP- HCE - Not Available; TSP-ECOM - Not Available.
    supportsTokenNotifications:
      type: string
      example: 'string'
      description: Boolean indicating whether token notifications are used.TSP-APPLE - Optional; TSP-HCE - Not Available; TSP- ECOM - Not Available.
    termsAndConditionsUrl:
      type: string
      example: 'string'
      description: URL of issuer website describing the terms and conditions. TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    cardAssets:
      $ref: 'definitions.yaml#/CardAssets'    


CardArt:
  type: object
  properties:
    issuerCardArtGUID:
      type: <string> array
      example: ['string']
      description: Array of card art related GUIDs. Each GUID must have been configured in the TSP. TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.

CardAssets:
  type: object
  properties:
    issuerLogoGUID:
      type: string
      example: 'string'
      description: same as issuerCardLogoGUID.TSP-APPLE - Optional; TSP- HCE - Optional; TSP-ECOM - Optional.
    paymentNetworkLogoGUID:
      type: string
      example: 'string'
      description: same as issuerCardSymbolGUID.TSP-APPLE - Optional; TSP- HCE - Optional; TSP-ECOM - Optional.
    coBrandLogoGUID:
      type: string
      example: 'string'
      description: same as entry in issuerCardArtGUID.TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    cardBackgroundGUID:
      type: string
      example: 'string'
      description: same as entry in issuerCardArtGUID.TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    cardArtCompositeGUID:
      type: string
      example: 'string'
      description: same as entry in issuerCardArtGUID.TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    iconPassNotificationsGUID:
      type: string
      example: 'string'
      description: same as same as Apple field called Icon.TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.
    iconIssuerAppGUID:
      type: string
      example: 'string'
      description: same as Samsung field Card Issuer App Icon.TSP-APPLE - Optional; TSP-HCE - Optional; TSP-ECOM - Optional.


PaymentInstrument:
  type: object
  properties:
    accountNumber:
      type: string
      example: 7006703127XX14X3
      pattern: ^\\d{13,19}$
      description: Token or PAN (depending on system configuration) of the card to be enrolled and provisioned
    cvv2:
      type: string
      example: '123'
      pattern: ^\\d{3,4}$
      description: CVV2 value associated with the PAN on the card
    name:
      type: string
      example: The full name on the card associated with the enrolled payment instrument
      description: 'Your Name' 
    expirationDate:
      $ref: 'definitions.yaml#/ExpirationDate'
    billingAddress:
      $ref: 'definitions.yaml#/BillingAddress'
    provider:
      $ref: 'definitions.yaml#/Provider'
  required:
    - accountNumber
    - expirationDate 
    - billingAddress         

ExpirationDate:
  type: object
  properties:   
    month: 
      type: string
      example: '12'
      pattern: ^\\d{2}$
      description: The month that the card is set to expire    
    year:
      type: string
      example: '2024'
      pattern: ^\\d{4}$
      description: The year that the card is set to expire
  required:
    - month  
    - year

BillingAddress:
  type: object
  properties:
    line1:
      type: string
      example: 801Metro Center Blvd
      description: 'Street 1 on billing address for the payment instrument. Permitted characters: - Whitespace - a-z - A-Z - 0-9 - Symbols: .,?-_#:/ '
    line2:
      type: string
      example: 906Metro Center Blvd
      description: 'Street 2 on billing address for the payment instrument. Permitted characters: - Whitespace - a-z - A-Z - 0-9 - Symbols: .,?-_#:/ '  
    city:
      type: string
      example: Foster City
      description: 'The city associated with the enrolled payment instrument. Permitted characters: - Whitespace - a-z - A-Z - 0-9 - Symbols: .?- '  
    state:  
      type: string
      example: CA
      pattern: ^[a-zA-Z]{1,3}$
      description: 'State or province code (e.g. "NY") Format: ISO 3166-2'
    postalCode:
      type: string
      example: '94404'
      pattern: ^[0-9a-zA-Z]{3,16}$
      description: 'The postal code associated with the enrolled payment instrument. Permitted characters: - a-z - A-Z - 0-9'  
    country:
      type: string
      example: US
      pattern: ^[a-zA-Z]{2}$
      description: 'Country code (e.g. "US"). Format: ISO 3166-1 alpha-2'
  required:
    - country      

Provider:
  type: object
  properties:
    intent:
      type: string
      enum: [PUSH_PROV_MOBILE, PUSH_PROV_ONFILE]
      description: 'The intent of the encryptor. PUSH_PROV_MOBILE - The value PUSH_PROV_MOBILE means the issuer is providing the PAN for the purpose of provisioning a token for the consumer on a particular device, for a particular wallet/account. PUSH_PROV_ONFILE - The value PUSH_PROV_ONFILE means the issuer is providing the PAN for the purpose of provisioning a token to be stored on file (cloud bound and not device bound) for ecommerce transactions, for a particular wallet/account'
      example: PUSH_PROV_MOBILE
    clientWalletProvider:
      type: string
      description: 'Client Wallet Provider is the token requestor`s ID (TRID), which is returned to the Wallet Provider as part of the onboarding. Based on the Token requestor ID, the TSP determines the type of encrypted payment instrument to return'
      example: '40000000047'
    clientWalletAccountID:
      type: string
      description: 'Client-provided consumer ID that identifies the Wallet Account Holder entity. Note: It must match the value the Wallet Provider will send in the token provisioning request'
      example: wallet_id-2
    clientDeviceID:
      type: string
      description: 'Stable device identification set by the Wallet Provider. Could be the computer identifier or ID tied to hardware such as TEE_ID or SE_ID. Note: This field must match the clientDeviceID the Wallet Provider will send in the token provision request. Permitted characters: - a-z - A-Z - 0-9 - Symbols: -_ '
      example: ed6abb56323ba656521ac476
    clientAppID:
      type: string
      description: 'Unique identifier for the client application, used to provide some of the encrypted values. The Issuer will configure the clientAppID value during onboarding. Permitted characters: - a-z - A-Z - 0-9 - Symbols: -_ '
      example: MyApp
    isIDnV:
      type: string
      description: 'String field to specify if the Issuer wants ID&V to be performed. If value is "false" or missing then the Issuer will not receive a step-up request from the TSP, and no step up will be triggered during provisioning. Permitted values: true or false. By default is false'
      example: false
  required:
    - intent
    - clientWalletProvider 
    - clientWalletAccountID
    - isIDnV

DetokenizeWithVerificationRequest:
  type: object
  properties:
    messageId:
      type: string
      description: Unique message identifier (GUID format) of this command
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}- [0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      example: 6595bd36-d8d9-413b-b981-2d8028d3b9e0
    processingCode:
      type: string
      description: Processing Code. Transaction Type (Digits 1&2) = '91' for De- tokenization request. Source Account (Digits 3&4) = '00'. Destination Account (Digits 5&6) = '00'. ISO 8583 DE('3') - Processing Code
      pattern: ^\\d{6}$
      example: '910000'
    amount:
      type: string
      description: 'Amount, Transaction. Total amount, including any cash components, in format $$cc Note: implied decimal point'
      pattern: ^\\d{12}$
      example: '000000011550'
    txDateTime:
      type: string
      description: Sender’s Message Date & Time (UTC) in format 'MMDDhhmmss'.
      pattern: ^\\d{10}$
      example: '0707052030'
    stan:
      type: string
      description: 'Systems Trace Audit Number. A number set by an Acquirer to identify a transaction. ISO 8583 DE(11) - System trace audit number (STAN)'
      pattern: ^\\d{6}$
      example:  '000015'
    txTimeLocal:
      type: string
      description: Time, Local Transaction. POS terminal local time in the format HHMMSS
      pattern: ^\\d{6}$
      example: '052030'
    txDateLocal:
      type: string
      description: Date, Local Transaction. POS terminal local date in the format 'MMDD'
      pattern: ^\\d{4}$
      example: '0707'
    dateSettlement:
      type: string
      description: 'Date, Settlement. Acquirer’s Processing Date having the format MMDD (per the field 015 value in the 0200/0220/0221 received from the Acquirer)'
      pattern: ^\\d{4}$
      example: '0707'
    mcc:
      type: string
      description: 'Merchant’s Type. Merchant Category Code (MCC) ISO 8583 DE(18) - Merchant type, or merchant category code'
      pattern: ^\\d{4}$
      example: '5999'
    posEntryMode:
      type: string
      description: 'POS Entry Mode. ISO 8583 DE(22) - Point of service entry mode'
      pattern: ^\\d{3}$
      example: '920'
    posConditionCode:
      type: string
      description: 'POS Entry Mode. ISO 8583 DE(22) - Point of service entry mode. The following value are available: - 00 (Normal presentment) - 04 (Electronic Cash Register interface) - 27 (Unattended terminal unable to retain card) - 42 (Electronic Payment Terminal i.e. a POS terminal) - 43 (Card Activated Fuel Dispenser) - 44 (Travel ticket vending machine) - 45 (Vending machine, undefined)'
      enum: ['00', '04', '27', '42', '43', '44', '45']
      example: '27'
    acquiringInstitutionIdCode:
      type: string
      description: 'Acquiring Institution Identification Code. ISO 8583 DE(32) - Acquiring institution identification codeConditional: Required if the transaction is for a scheme BIN range; else Optional'
      pattern: ^\\d{1,11}$
      example: '111803'
    forwardingInstitutionIdCode:
      type: string
      description: 'Forwarding Institution Identification Code. ISO 8583 DE(33) - Forwarding institution identification code'
      pattern: ^\\d{1,11}$
      example: '111803'
    rrn:
      type: string
      description: 'Retrieval Reference Number. Reference number supplied by the card acceptor that remains unchanged for the life of the transaction. ISO 8583 DE(37) - Retrieval reference number'
      pattern: ^[A-Za-z0-9]{12}$
      example: '000000144210'
    terminalId:
      type: string
      description: 'Card Acceptor Terminal ID. POS terminal identifier as defined by the Card Acceptor or by the Acquirer. The CATID is a unique code identifying a logical terminal at the card acceptor location. ISO 8583 DE(41) - Card acceptor terminal identification'
      example: PROC0001
    merchantId:
      type: string
      description: 'Card Acceptor Identification Code. ISO 8583 DE(42) - Card acceptor identification code'
      example: '123456789012345'
    merchantNameLocation:
      type: string
      description: 'Card Acceptor Name/Location. POS terminal designation and location, as defined by the Card Acceptor (Merchant) or by the Acquirer. ISO 8583 DE(43) - Card acceptor name/location (1-23 street address, -36 city, -38 state, 39-40 country)'
      example: First Data Markham ON CA  
    currencyCode:
      type: string
      description: 'Currency Code, Transaction. ISO 8583 DE(49) - Currency code, transaction'
      pattern: ^[A-Za-z0-9]{3}$
      example: '124'
    additionalAmounts:
      type: string
      description: 'Additional Amounts. The Cash component of the transaction. ISO 8583 DE(54) - Additional amounts'
      pattern: ^[A-Za-z0-9]{1,20}$
      example: string
    transactionType:
      type: string
      description: 'Transaction type, used for subsequent ecommerce transactions. ISO 8583 DE(60) - Reserved (national)The following value are available: - 02 (for Recurring Payments) - 03 (for Installment Payments)'
      enum: ['02', '03']
      example: '02'
    networkManagementInformationCode:
      type: string
      description: 'Network management information code is used in this message to convey the type of detokenization operation requested. The following value are available: - 110 (Domestic Entity calling out TSP with Domain control) - 111 (Domestic Entity calling out TSP w/o Domain control) - 112 (Issuer calling out TSP with Domain control) - 113 (Issuer calling out TSP w/o Domain control)'
      enum: ['110', '111', '112', '113']
      example: '111'
    originalDataElements:
      type: string
      description: 'Original transaction reference. Used for e- commerce/recurring transactions. ISO 8583 DE(90) - Original data elements'
      pattern: ^\\d{42}$
      example: string
    encData:
      example: PLEASE NOTE, this field should be present as jwt string - eyJ...xQ
      $ref: 'definitions.yaml#/DetokenizationEncData'
  required:
    - messageId
    - processingCode
    - amount
    - txDateTime
    - stan
    - txTimeLocal
    - txDateLocal
    - dateSettlement
    - mcc
    - posEntryMode
    - posConditionCode
    - rrn
    - terminalId
    - merchantId
    - currencyCode
    - encData

DetokenizationEncData:
  type: object
  properties:
    accountNumber:
      type: string
      description: 'Payment Token constructed from Track 2 Equivalent Data retrieved from Tag 57 of the form factor. ISO 8583 DE(2) - Primary account number (PAN)'
      pattern: ^\\d{13,19}$
      example: '4444440000000003'
    panExpDate:
      type: string
      description: 'Expiry Date. Payment Token Expiry Date in the format YYMM. Constructed from Track 2 Equivalent Data retrieved from Tag 57 of the form factor.'
      pattern: ^\\d{4}$
      example: '2512'
    psn:
      type: string
      description: 'Payment Token card sequence number if present in the ICC (Tag 5F34), right justified and zero filled. 000 if no value present. ISO 8583 DE(23) - Application PAN sequence number'
      pattern: ^\\d{3}$
      example: '000'            
    track2:
      type: string
      description: 'Track 2 Data. Track 2 Equivalent Data (containing Payment Token data) retrieved from Tag 57 of the form factor. ISO 8583 DE(35) - Track 2 data'
      example: '5076386904643492=25122200012300000001'
    additionalDataPrivate:
      type: string
      description: 'Additional data (private). Can contain TAVV (Visa) or UCAF (Mastercard) Data. Encoding and format is scheme/implementation dependent. Used for e-commerce. ISO 8583 DE(48) - Additional data (private)'
      example: '123456789012345'
    pinBlock:
      type: string
      description: 'PIN Data. Debit only: PIN block based on D-PAN. Format: 8 bytes sent as a base64-encoded string. ISO 8583 DE(52) - Personal identification number data'
      example: 'FFFFFFFFFFFFFFFF'
    tokenChipData:
      type: string
      description: 'Token chip data. Integrated Circuit Card related data. ISO 8583 DE(55) - ICC data - EMV having multiple tags'
      example: '9F360202199F26084C4CC922F1F4D5679F1016150181040CA480000000B0000800000000000000000082025C009F02060000000115509F0306000000000000950580000480009F3704000075239A030711055F2A0201249F1A0201249C0101'
  required:
    - psn
    - tokenChipData

DetokenizeWithVerificationResponse:
  type: object
  properties:
    messageId:
      type: string
      description: Unique message identifier (GUID format) of this command
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}- [0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      example: 6595bd36-d8d9-413b-b981-2d8028d3b9e0
    responseCode:
      type: string
      description: Response Code. Contains the TSP result code for the de- tokenization request.
      pattern: ^[A-Za-z0-9]{2}$
      example: '00'
    processingCode:
      type: string
      description: Processing Code. Transaction Type (Digits 1&2) = '91' for De- tokenization request. Source Account (Digits 3&4) = '00'. Destination Account (Digits 5&6) = '00'. ISO 8583 DE('3') - Processing Code
      pattern: ^\\d{6}$
      example: '910000'
    amount:
      type: string
      description: 'Amount, Transaction. Total amount, including any cash components, in format $$cc Note: implied decimal point'
      pattern: ^\\d{12}$
      example: '000000011550'
    txDateTime:
      type: string
      description: Sender’s Message Date & Time (UTC) in format 'MMDDhhmmss'.
      pattern: ^\\d{10}$
      example: '0707052030'
    stan:
      type: string
      description: 'Systems Trace Audit Number. A number set by an Acquirer to identify a transaction. ISO 8583 DE(11) - System trace audit number (STAN)'
      pattern: ^\\d{6}$
      example:  '000015'
    txTimeLocal:
      type: string
      description: Time, Local Transaction. POS terminal local time in the format HHMMSS
      pattern: ^\\d{6}$
      example: '052030'
    txDateLocal:
      type: string
      description: Date, Local Transaction. POS terminal local date in the format 'MMDD'
      pattern: ^\\d{4}$
      example: '0707'  
    dateSettlement:
      type: string
      description: 'Date, Settlement. Acquirer’s Processing Date having the format MMDD (per the field 015 value in the 0200/0220/0221 received from the Acquirer)'
      pattern: ^\\d{4}$
      example: '0707'
    posConditionCode:
      type: string
      description: 'POS Entry Mode. ISO 8583 DE(22) - Point of service entry mode. The following value are available: - 00 (Normal presentment) - 04 (Electronic Cash Register interface) - 27 (Unattended terminal unable to retain card) - 42 (Electronic Payment Terminal i.e. a POS terminal) - 43 (Card Activated Fuel Dispenser) - 44 (Travel ticket vending machine) - 45 (Vending machine, undefined)'
      enum: ['00', '04', '27', '42', '43', '44', '45']
      example: '27'
    acquiringInstitutionIdCode:
      type: string
      description: 'Acquiring Institution Identification Code. ISO 8583 DE(32) - Acquiring institution identification codeConditional: Required if the transaction is for a scheme BIN range; else Optional'
      pattern: ^\\d{1,11}$
      example: '111803'
    forwardingInstitutionIdCode:
      type: string
      description: 'Forwarding Institution Identification Code. ISO 8583 DE(33) - Forwarding institution identification code'
      pattern: ^\\d{1,11}$
      example: '111803'
    rrn:
      type: string
      description: 'Retrieval Reference Number. Reference number supplied by the card acceptor that remains unchanged for the life of the transaction. ISO 8583 DE(37) - Retrieval reference number'
      pattern: ^[A-Za-z0-9]{12}$
      example: '000000144210'
    terminalId:
      type: string
      description: 'Card Acceptor Terminal ID. POS terminal identifier as defined by the Card Acceptor or by the Acquirer. The CATID is a unique code identifying a logical terminal at the card acceptor location. ISO 8583 DE(41) - Card acceptor terminal identification'
      example: PROC0001
    merchantId:
      type: string
      description: 'Card Acceptor Identification Code. ISO 8583 DE(42) - Card acceptor identification code'
      example: '123456789012345'  
    currencyCode:
      type: string
      description: 'Currency Code, Transaction. ISO 8583 DE(49) - Currency code, transaction'
      pattern: ^[A-Za-z0-9]{3}$
      example: '124'
    encData:
      example: PLEASE NOTE, this field should be present as jwt string - eyJ...xQ
      $ref: 'definitions.yaml#/DetokenizationEncData'
  required:
    - messageId
    - responseCode
    - processingCode
    - amount
    - txDateTime
    - stan
    - txTimeLocal
    - txDateLocal
    - dateSettlement
    - posConditionCode
    - rrn
    - terminalId
    - merchantId
    - currencyCode
    - encData              
